// Sistema de notifica√ß√µes para candidaturas m√©dicas
// Integra√ß√£o com Supabase Edge Functions para envio de emails

class DoctorNotificationSystem {
    constructor() {
        this.emailTemplates = {
            applicationReceived: {
                subject: 'TeleMed - Candidatura Recebida',
                template: `
                    <h2>Candidatura Recebida com Sucesso!</h2>
                    <p>Ol√°, Dr(a). {{doctorName}},</p>
                    <p>Sua candidatura para se tornar m√©dico parceiro da TeleMed foi recebida com sucesso!</p>
                    
                    <h3>Pr√≥ximos Passos:</h3>
                    <ol>
                        <li><strong>An√°lise Documental (3-5 dias):</strong> Nossa equipe verificar√° todos os documentos enviados</li>
                        <li><strong>Verifica√ß√£o no CRM:</strong> Consultaremos automaticamente a situa√ß√£o do seu CRM</li>
                        <li><strong>Valida√ß√£o de Diplomas:</strong> Conferiremos no e-MEC a validade do seu diploma</li>
                        <li><strong>Background Check:</strong> Verificaremos antecedentes profissionais</li>
                        <li><strong>Entrevista Online:</strong> Se aprovado na an√°lise, voc√™ ser√° convidado para uma entrevista</li>
                    </ol>
                    
                    <h3>Documentos Pendentes:</h3>
                    <p>Voc√™ receber√° um email separado com instru√ß√µes para envio dos seguintes documentos:</p>
                    <ul>
                        <li>CPF e RG digitalizados (frente e verso)</li>
                        <li>Carteira do CRM atualizada (frente e verso)</li>
                        <li>Diploma de Medicina</li>
                        <li>Comprovante de endere√ßo (m√°ximo 3 meses)</li>
                        <li>Certificados de especializa√ß√£o (se aplic√°vel)</li>
                    </ul>
                    
                    <h3>Informa√ß√µes da Candidatura:</h3>
                    <ul>
                        <li><strong>CRM:</strong> {{crm}}/{{crmState}}</li>
                        <li><strong>Especialidades:</strong> {{specialties}}</li>
                        <li><strong>Data de Envio:</strong> {{submittedDate}}</li>
                        <li><strong>Protocolo:</strong> {{applicationId}}</li>
                    </ul>
                    
                    <p><strong>Prazo de An√°lise:</strong> At√© 15 dias √∫teis</p>
                    
                    <h3>Contato:</h3>
                    <p>Em caso de d√∫vidas, entre em contato:</p>
                    <ul>
                        <li>üìß Email: medicos@telemed.com</li>
                        <li>üìû Telefone: (11) 9999-9999</li>
                        <li>üí¨ WhatsApp: (11) 9999-9999</li>
                    </ul>
                    
                    <p>Atenciosamente,<br>
                    Equipe TeleMed</p>
                `
            },
            
            applicationApproved: {
                subject: 'TeleMed - Candidatura Aprovada! üéâ',
                template: `
                    <h2>Parab√©ns! Sua Candidatura Foi Aprovada! üéâ</h2>
                    <p>Ol√°, Dr(a). {{doctorName}},</p>
                    <p>√â com grande satisfa√ß√£o que informamos que sua candidatura foi <strong>APROVADA</strong>!</p>
                    
                    <h3>Pr√≥ximos Passos Obrigat√≥rios:</h3>
                    <ol>
                        <li><strong>Treinamento Obrigat√≥rio:</strong>
                            <ul>
                                <li>Uso da plataforma - Tutorial completo</li>
                                <li>Protocolos de atendimento - Espec√≠ficos</li>
                                <li>Assinatura de contratos - Formaliza√ß√£o</li>
                                <li>Configura√ß√£o de perfil - P√∫blico na plataforma</li>
                            </ul>
                        </li>
                        <li><strong>Configura√ß√£o Inicial:</strong>
                            <ul>
                                <li>Definir hor√°rios de disponibilidade</li>
                                <li>Configurar valores de consulta</li>
                                <li>Testar equipamentos (c√¢mera, microfone, internet)</li>
                                <li>Preparar ambiente profissional</li>
                            </ul>
                        </li>
                    </ol>
                    
                    <h3>Informa√ß√µes Importantes:</h3>
                    <ul>
                        <li><strong>Login:</strong> Use o email {{email}} para acessar a plataforma</li>
                        <li><strong>Senha:</strong> A mesma que voc√™ cadastrou</li>
                        <li><strong>Acesso:</strong> <a href="https://telemed.com/auth.html">https://telemed.com/auth.html</a></li>
                        <li><strong>Treinamento:</strong> Agendado para os pr√≥ximos 3 dias √∫teis</li>
                    </ul>
                    
                    <h3>Acompanhamento Cont√≠nuo:</h3>
                    <ul>
                        <li>Avalia√ß√µes de pacientes - Monitoramento constante</li>
                        <li>Auditorias peri√≥dicas - Qualidade do atendimento</li>
                        <li>Educa√ß√£o continuada - Cursos obrigat√≥rios</li>
                        <li>Renova√ß√£o anual - Atualiza√ß√£o de dados</li>
                    </ul>
                    
                    <p><strong>Bem-vindo √† equipe TeleMed!</strong></p>
                    
                    <p>Atenciosamente,<br>
                    Equipe TeleMed</p>
                `
            },
            
            applicationRejected: {
                subject: 'TeleMed - Candidatura N√£o Aprovada',
                template: `
                    <h2>Candidatura N√£o Aprovada</h2>
                    <p>Ol√°, Dr(a). {{doctorName}},</p>
                    <p>Agradecemos seu interesse em se tornar m√©dico parceiro da TeleMed.</p>
                    
                    <p>Ap√≥s an√°lise criteriosa de sua candidatura, informamos que ela n√£o foi aprovada neste momento.</p>
                    
                    <h3>Motivo:</h3>
                    <p>{{rejectionReason}}</p>
                    
                    <h3>Possibilidade de Nova Candidatura:</h3>
                    <p>Voc√™ poder√° enviar uma nova candidatura ap√≥s 6 meses, desde que os requisitos pendentes sejam atendidos.</p>
                    
                    <h3>Recursos:</h3>
                    <p>Caso discorde desta decis√£o, voc√™ pode entrar em contato conosco em at√© 30 dias:</p>
                    <ul>
                        <li>üìß Email: recursos@telemed.com</li>
                        <li>üìû Telefone: (11) 9999-9999</li>
                        <li><strong>Protocolo:</strong> {{applicationId}}</li>
                    </ul>
                    
                    <p>Atenciosamente,<br>
                    Equipe TeleMed</p>
                `
            }
        };
    }

    // Enviar notifica√ß√£o de candidatura recebida
    async sendApplicationReceived(applicationData) {
        const template = this.emailTemplates.applicationReceived;
        const emailContent = this.replaceTemplateVariables(template.template, {
            doctorName: applicationData.full_name,
            crm: applicationData.crm,
            crmState: applicationData.crm_state,
            specialties: Array.isArray(applicationData.specialties) ? applicationData.specialties.join(', ') : 'N/A',
            submittedDate: new Date(applicationData.submitted_at).toLocaleDateString('pt-BR'),
            applicationId: applicationData.id.substring(0, 8).toUpperCase()
        });

        return await this.sendEmail(
            applicationData.email,
            template.subject,
            emailContent
        );
    }

    // Enviar notifica√ß√£o de candidatura aprovada
    async sendApplicationApproved(applicationData) {
        const template = this.emailTemplates.applicationApproved;
        const emailContent = this.replaceTemplateVariables(template.template, {
            doctorName: applicationData.full_name,
            email: applicationData.email
        });

        return await this.sendEmail(
            applicationData.email,
            template.subject,
            emailContent
        );
    }

    // Enviar notifica√ß√£o de candidatura rejeitada
    async sendApplicationRejected(applicationData, rejectionReason) {
        const template = this.emailTemplates.applicationRejected;
        const emailContent = this.replaceTemplateVariables(template.template, {
            doctorName: applicationData.full_name,
            rejectionReason: rejectionReason || 'N√£o especificado',
            applicationId: applicationData.id.substring(0, 8).toUpperCase()
        });

        return await this.sendEmail(
            applicationData.email,
            template.subject,
            emailContent
        );
    }

    // Substituir vari√°veis no template
    replaceTemplateVariables(template, variables) {
        let content = template;
        for (const [key, value] of Object.entries(variables)) {
            const regex = new RegExp(`{{${key}}}`, 'g');
            content = content.replace(regex, value);
        }
        return content;
    }

    // Enviar email (integra√ß√£o com Supabase Edge Function)
    async sendEmail(to, subject, htmlContent) {
        try {
            // Em produ√ß√£o, isso seria uma Edge Function do Supabase
            // Por enquanto, vamos simular o envio
            console.log('Enviando email:', {
                to,
                subject,
                htmlContent: htmlContent.substring(0, 100) + '...'
            });

            // Simular delay de envio
            await new Promise(resolve => setTimeout(resolve, 1000));

            return { success: true, message: 'Email enviado com sucesso' };
        } catch (error) {
            console.error('Erro ao enviar email:', error);
            return { success: false, error: error.message };
        }
    }

    // Enviar notifica√ß√£o WhatsApp (integra√ß√£o futura)
    async sendWhatsAppNotification(phone, message) {
        try {
            // Integra√ß√£o com WhatsApp API seria implementada aqui
            console.log('Enviando WhatsApp para:', phone, message.substring(0, 50) + '...');
            
            return { success: true, message: 'WhatsApp enviado com sucesso' };
        } catch (error) {
            console.error('Erro ao enviar WhatsApp:', error);
            return { success: false, error: error.message };
        }
    }
}

// Inst√¢ncia global do sistema de notifica√ß√µes
const doctorNotifications = new DoctorNotificationSystem();

// Exportar para uso em outros arquivos
if (typeof module !== 'undefined' && module.exports) {
    module.exports = DoctorNotificationSystem;
}